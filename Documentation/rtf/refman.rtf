{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\info 
{\title {\comment PSU-Compbio-FEM }PSU-Compbio-FEM}
{\comment Generated byDoxgyen. }
{\creatim \yr2017\mo3\dy21\hr9\min56\sec13}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt PSU-Compbio-FEM}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Tue Mar 21 2017 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Main Page\par \pard\plain 
{\tc \v Main Page}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the property of The Penn State Computational Biomechanics Group. \par
This code is developed by Harsha Teja Garimella under the supervision of Dr. Reuben H Kraft.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 Motivation:} \par}
Computational Brain Biomechanics\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 Acknowledgements:} \par}
Funding from CFDRC and Funding from ARL\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 Contact:} \par}
Harsha T Garimella, \par
 Ph.D. Candidate, Mechanical Engineering, \par
 The Pennsylvania State University, \par
 University Park, Pennsylvania, USA. \par
 Email: {\f2 harshatejagarimella@gmail.com}\par
Reuben H. Kraft, Ph.D. \par
 Shuman Asst. Professor, \par
 Department of Mechanical Engineering, \par
 Department of Biomedical Engineering, \par
 The Pennsylvania State University, \par
 University Park, Pennsylvania, USA. \par
 Email: {\f2 reuben.kraft@psu.edu} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Materials} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Mesh} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/{\b functions.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/{\b Materials.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/{\b Mesh.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/{\b fe_assemble_mass.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/{\b fe_find_index.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/{\b fe_gather.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/{\b fe_scatter.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/InternalNodalForce/{\b fe_stiffness_embed_truss.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/InternalNodalForce/{\b fe_stiffness_hex.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Mass/{\b fe_mass_hex.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/{\b fe_guass_points.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/{\b fe_guass_points_3d.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/{\b fe_guass_weights.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/{\b fe_guass_weights_3d.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/{\b fe_dn_actual_8.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/{\b fe_dn_iso_8.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/{\b fe_shapeMatrix.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/{\b fe_shapes.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/BoundaryConditions/{\b fe_apply_bc.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/{\b fe_calDefGrad.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/{\b fe_calJacobian.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/{\b fe_calSimpTransformation.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/{\b fe_calTransformation.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/{\b fe_strDispMatrix.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/{\b fe_tensor2voigt.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/{\b fe_transformMass.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/{\b fe_voigt2tensor.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/Explicit/{\b fe_mainEXPLICIT.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/RHSNodalForce/{\b fe_getforce.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/RHSNodalForce/{\b fe_update.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/{\b fe_mainRead.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/{\b fe_text2matrix.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/{\b Materials.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/{\b Mesh.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/{\b fe_display.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/{\b fe_matrix2text.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/{\b fe_vector2text.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/{\b fe_vtk.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/{\b fe_write.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/{\b fe_get_mats.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/Elastic/{\b fe_isoElastic.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/StressUpdate/{\b fe_stressUpdate.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/StressUpdate/{\b fe_stressUpdate_1d.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/{\b fe_calArea_4.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAII \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/{\b fe_calVolume.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/{\b fe_concatenate_vector2matrix.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/{\b fe_detMatrix.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/{\b fe_find.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/{\b fe_invMatrix.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/{\b fe_calTimeStep.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/{\b fe_calWaveSpeed.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/{\b fe_getTimeStep.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Materials Class Reference\par \pard\plain 
{\tc\tcl2 \v Materials}
{\xe \v Materials}
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\par
{
{\f2 #include <Materials.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readMats} (int a, std::string b, VectorXd c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMats} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_get_mats} (int matl_code, int obj_interest)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b fe_get_model} (int matl_code)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 23 of file Materials.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v printMats\:Materials}
{\xe \v Materials\:printMats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Materials::printMats ()}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 15 of file Materials.cpp.}\par
}
{\xe \v readMats\:Materials}
{\xe \v Materials\:readMats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Materials::readMats (int  {\i a}, std::string  {\i b}, VectorXd  {\i c})}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 6 of file Materials.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v fe_get_mats\:Materials}
{\xe \v Materials\:fe_get_mats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_get_mats (int  {\i matl_code}, int  {\i obj_interest}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extracts the material parameter values based on the material id \par
}{
Definition at line 5 of file fe_get_mats.cpp.}\par
}
{\xe \v fe_get_model\:Materials}
{\xe \v Materials\:fe_get_model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string fe_get_model (int  {\i matl_code}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file fe_get_mats.cpp.}\par
}
{\xe \v main\:Materials}
{\xe \v Materials\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal accelerations of the embedded mesh This is the main file. If you want to submit a new job \'96 this is where you do it \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enter the path address for your job folder\par
What is the Problem Dimension - Degrees of Freedom per node?\par
Simulation start time\par
Simulation end time\par
Output frequency \'96 result ouputs for every 100 timesteps\par
Maximum time step\par
Reduction factor\par
Loading Amplitude\par
number of nodes * number of directions\par
Degrees of freedom index data\par
Number of bounday condition constraints\par
Which nodes are constrained ?\par
index corresponding to the constrained degrees of freedom\par
Displacements of the constrained degrees of freedom\par
Enter your choice for type of simulations below, based on the following options: 1 - Explicit Dynamic 2 - Implicit Dynamic 3 - Static\par
}{
Definition at line 108 of file main.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/{\b Materials.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/{\b Materials.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Mesh Class Reference\par \pard\plain 
{\tc\tcl2 \v Mesh}
{\xe \v Mesh}
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
\par
{
{\f2 #include <Mesh.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readMesh} (MatrixXd n, MatrixXd e)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b getNodes} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b getElements} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b getNewNodes} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b getNewElements} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preprocessMesh} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 23 of file Mesh.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getElements\:Mesh}
{\xe \v Mesh\:getElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd Mesh::getElements (void )}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 15 of file Mesh.cpp.}\par
}
{\xe \v getNewElements\:Mesh}
{\xe \v Mesh\:getNewElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd Mesh::getNewElements (void )}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file Mesh.cpp.}\par
}
{\xe \v getNewNodes\:Mesh}
{\xe \v Mesh\:getNewNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd Mesh::getNewNodes (void )}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file Mesh.cpp.}\par
}
{\xe \v getNodes\:Mesh}
{\xe \v Mesh\:getNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd Mesh::getNodes (void )}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 11 of file Mesh.cpp.}\par
}
{\xe \v preprocessMesh\:Mesh}
{\xe \v Mesh\:preprocessMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Mesh::preprocessMesh (void )}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nodes Preprocessing - Putting the numbering in order\par
Elements Preprocessing - Correcting the element definitions\par
find_in_matrix gives the row number of node in nodes matrix \par
}{
Definition at line 27 of file Mesh.cpp.}\par
}
{\xe \v readMesh\:Mesh}
{\xe \v Mesh\:readMesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Mesh::readMesh (MatrixXd  {\i n}, MatrixXd  {\i e})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 6 of file Mesh.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/{\b Mesh.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/{\b Mesh.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/functions.h File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/functions.h}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/functions.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <cmath>}\par
{\f2 #include <vector>}\par
{\f2 #include <fstream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <string>}\par
{\f2 #include <iomanip>}\par
{\f2 #include "Eigen/Dense"}\par
{\f2 #include "Eigen/Eigenvalues"}\par
{\f2 #include "unsupported/Eigen/MatrixFunctions"}\par
{\f2 #include "Mesh.h"}\par
{\f2 #include "Materials.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b text2matrix} (std::string name, int cols)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_shapes_8} (double rvalue, double svalue, double tvalue)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dndr_8} (double rvalue, double svalue, double tvalue)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dnds_8} (double rvalue, double svalue, double tvalue)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dndt_8} (double rvalue, double svalue, double tvalue)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b guass_points} (int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b guass_weights} (int n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b guass_points_3d} (int nx, int ny, int nz)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b guass_weights_3d} (int {\b ndof}, int nx, int ny, int nz)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_isoElastic} (int n, double E, double nu)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_calJacobian} (int dim, int nnel, VectorXd dndr, VectorXd dnds, VectorXd dndt, double xcoord[], double ycoord[], double zcoord[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dndx_8} (int nnel, VectorXd dndr, VectorXd dnds, VectorXd dndt, MatrixXd invJacobian)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dndy_8} (int nnel, VectorXd dndr, VectorXd dnds, VectorXd dndt, MatrixXd invJacobian)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dndz_8} (int nnel, VectorXd dndr, VectorXd dnds, VectorXd dndt, MatrixXd invJacobian)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_strDispMatrix} (int edof, int nnel, VectorXd dndx, VectorXd dndy, VectorXd dndz)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_apply_bc_stiffness} (MatrixXd kk, VectorXi {\b bcdof}, VectorXd {\b bcval})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_apply_bc_force} (VectorXd ff, VectorXi {\b bcdof}, VectorXd {\b bcval})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b matrix2text} (std::string name, MatrixXd new_slave_master, int width)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b vector2text} (std::string name, VectorXd vector, int width)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_calTransformation} (MatrixXd truss_nodes, int choice)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_calSimpTransformation} (MatrixXd truss_nodes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_stiffness_hex} (double E, double nu, int {\b ndof}, int nnel, int edof, double xcoord[], double ycoord[], double zcoord[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_stiffness_embed_truss} (MatrixXd nodes_truss, MatrixXd elements_truss, double E_truss, double {\b A_truss}, int {\b ndof}, int nnel, int edof, double xcoord[], double ycoord[], double zcoord[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_shapeMatrix} (int edof, int nnel, VectorXd shapes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_mass_hex} (double rho, int {\b ndof}, int nnel, int edof, double xcoord[], double ycoord[], double zcoord[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_stressUpdate} (VectorXd dndx, VectorXd dndy, VectorXd dndz, MatrixXd disp_mat, VectorXd u, int opt, int return_opt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_getforce} (MatrixXd nodes, MatrixXd elements, int {\b ndof}, VectorXd u, VectorXd v, VectorXd fext, int size_counter, MatrixXd nodes_truss, MatrixXd elements_truss)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the resultant nodal force after each time step. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_getTimeStep} (MatrixXd nodes, MatrixXd elements, int {\b ndof}, VectorXd u, VectorXd v, VectorXd fext)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_calTimeStep} (double xcoord[], double ycoord[], double zcoord[], double E, double nu, double rho)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_calArea_4} (double a1, double a2, double a3, double a4, double b1, double b2, double b3, double b4, double c1, double c2, double c3, double c4)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_calVolume} (double xcoord[], double ycoord[], double zcoord[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_apply_bc_displacement} (VectorXd U, VectorXi {\b bcdof}, VectorXd {\b bcval})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_display_vector} (VectorXd A)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_display_matrix} (MatrixXd A)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_transformMass} (MatrixXd m, int opt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_get_mats} (int matl_code, int obj_interest)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b fe_get_model} (int matl_code)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_strDispMatrix_totalLagrangian} (int edof, int nnel, VectorXd dndx, VectorXd dndy, VectorXd dndz, VectorXd u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_calDefGrad} (VectorXd dndx, VectorXd dndy, VectorXd dndz, VectorXd u)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_calWaveSpeed} (double E, double nu, double rho)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_writeElementStress} (MatrixXd sigma_all, double time)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_mass_truss} (double rho, double {\b A_truss}, int edof, MatrixXd nodes, MatrixXd elements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_stressUpdate_1d} (VectorXd dndx, VectorXd dndy, VectorXd dndz, VectorXd u_e, int opt, MatrixXd nodes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_vtkWrite_host} (std::string output, int format_choice, int mesh_choice, int time_step, MatrixXd nodes, MatrixXd elements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_vtkWrite_truss} (std::string output, int format_choice, int mesh_choice, int time_step, MatrixXd nodes, MatrixXd elements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_updateNodes} (MatrixXd nodes, VectorXd displacements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_mainEXPLICIT} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function carries out the explicit dynamic analysis of the FEM problem. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXi {\b fe_find_index} (VectorXi node_list)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_assemble_mass} (MatrixXd mm, MatrixXd m, VectorXi node_list, int sdof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_gather} (VectorXd global_vec, VectorXd local_vec, VectorXi node_list, int sdof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_scatter} (VectorXd global_vec, VectorXd local_vec, VectorXi node_list, int sdof)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_tensor2voigt} (MatrixXd A)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_voigt2tensor} (VectorXd B)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_concatenate_vector2matrix} (MatrixXd A, VectorXd B, int opt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fe_find} (VectorXd A, double a)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_mainRead} (std::string file)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b home_path}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b job_file}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ndof}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_meshes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Mesh} * {\b mesh}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b t_start}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b t_end}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b output_frequency}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dt_initial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dt_min}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b reduction}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b material_types}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Materials} * {\b mat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b input_load_amp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXi {\b fcdof}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fcload}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_constraints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXi {\b bcdof}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b bcval}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b element_stress_host}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b element_strain_host}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b element_stress_truss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b element_strain_truss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fi_prev}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fi_curr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b W_int}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b U_host}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b V_host}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b A_host}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b U_truss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b V_truss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b A_truss}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_apply_bc_displacement\:functions.h}
{\xe \v functions.h\:fe_apply_bc_displacement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_apply_bc_displacement (VectorXd  {\i U}, VectorXi  {\i bcdof}, VectorXd  {\i bcval})}}
\par
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 5 of file fe_apply_bc.cpp.}\par
}
{\xe \v fe_apply_bc_force\:functions.h}
{\xe \v functions.h\:fe_apply_bc_force}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_apply_bc_force (VectorXd  {\i ff}, VectorXi  {\i bcdof}, VectorXd  {\i bcval})}}
\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 17 of file fe_apply_bc.cpp.}\par
}
{\xe \v fe_apply_bc_stiffness\:functions.h}
{\xe \v functions.h\:fe_apply_bc_stiffness}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_apply_bc_stiffness (MatrixXd  {\i kk}, VectorXi  {\i bcdof}, VectorXd  {\i bcval})}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file fe_apply_bc.cpp.}\par
}
{\xe \v fe_assemble_mass\:functions.h}
{\xe \v functions.h\:fe_assemble_mass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_assemble_mass (MatrixXd  {\i mm}, MatrixXd  {\i m}, VectorXi  {\i node_list}, int  {\i sdof})}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assembles the global mass matrix \par
}{
Definition at line 24 of file fe_assemble_mass.cpp.}\par
}
{\xe \v fe_calArea_4\:functions.h}
{\xe \v functions.h\:fe_calArea_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_calArea_4 (double  {\i a1}, double  {\i a2}, double  {\i a3}, double  {\i a4}, double  {\i b1}, double  {\i b2}, double  {\i b3}, double  {\i b4}, double  {\i c1}, double  {\i c2}, double  {\i c3}, double  {\i c4})}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the area of a face with 4 vertices \par
}{
Definition at line 5 of file fe_calArea_4.cpp.}\par
}
{\xe \v fe_calDefGrad\:functions.h}
{\xe \v functions.h\:fe_calDefGrad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_calDefGrad (VectorXd  {\i dndx}, VectorXd  {\i dndy}, VectorXd  {\i dndz}, VectorXd  {\i u})}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the deformation gradient \par
}{
Definition at line 7 of file fe_calDefGrad.cpp.}\par
}
{\xe \v fe_calJacobian\:functions.h}
{\xe \v functions.h\:fe_calJacobian}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_calJacobian (int  {\i dim}, int  {\i nnel}, VectorXd  {\i dndr}, VectorXd  {\i dnds}, VectorXd  {\i dndt}, double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[])}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the jacobian \'96 using the derivates of shape functions \par
}{
Definition at line 7 of file fe_calJacobian.cpp.}\par
}
{\xe \v fe_calSimpTransformation\:functions.h}
{\xe \v functions.h\:fe_calSimpTransformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_calSimpTransformation (MatrixXd  {\i truss_nodes})}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 7 of file fe_calSimpTransformation.cpp.}\par
}
{\xe \v fe_calTimeStep\:functions.h}
{\xe \v functions.h\:fe_calTimeStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_calTimeStep (double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[], double  {\i E}, double  {\i nu}, double  {\i rho})}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the time step for a single element based on its dimensions and material model\par
For a single element - this function calculates the volume of the element and calculates the critical time step based on the wave speed. \par
}{
Definition at line 5 of file fe_calTimeStep.cpp.}\par
}
{\xe \v fe_calTransformation\:functions.h}
{\xe \v functions.h\:fe_calTransformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_calTransformation (MatrixXd  {\i truss_nodes}, int  {\i choice})}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the transformation matrix - transformation from local (truss) coordinate system to global (3d hex) coordinate system \par
}{
Definition at line 7 of file fe_calTransformation.cpp.}\par
}
{\xe \v fe_calVolume\:functions.h}
{\xe \v functions.h\:fe_calVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_calVolume (double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[])}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the volume of a 3d element \par
}{
Definition at line 7 of file fe_calVolume.cpp.}\par
}
{\xe \v fe_calWaveSpeed\:functions.h}
{\xe \v functions.h\:fe_calWaveSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_calWaveSpeed (double  {\i E}, double  {\i nu}, double  {\i rho})}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the wavespeed for a particular material model\par
This function calculates the wave speed for an element based on its material properties \par
}{
Definition at line 6 of file fe_calWaveSpeed.cpp.}\par
}
{\xe \v fe_concatenate_vector2matrix\:functions.h}
{\xe \v functions.h\:fe_concatenate_vector2matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_concatenate_vector2matrix (MatrixXd  {\i A}, VectorXd  {\i B}, int  {\i opt})}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenate a vector to a matrix \'96 rowwise or coloumn wise \par
}{
Definition at line 5 of file fe_concatenate_vector2matrix.cpp.}\par
}
{\xe \v fe_display_matrix\:functions.h}
{\xe \v functions.h\:fe_display_matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_display_matrix (MatrixXd  {\i A})}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints out a matrix \par
}{
Definition at line 5 of file fe_display.cpp.}\par
}
{\xe \v fe_display_vector\:functions.h}
{\xe \v functions.h\:fe_display_vector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_display_vector (VectorXd  {\i A})}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints out a vector \par
}{
Definition at line 41 of file fe_display.cpp.}\par
}
{\xe \v fe_dndr_8\:functions.h}
{\xe \v functions.h\:fe_dndr_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dndr_8 (double  {\i rvalue}, double  {\i svalue}, double  {\i tvalue})}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dndr of isoparametric element calculated for particular r, s, and t \par
}{
Definition at line 6 of file fe_dn_iso_8.cpp.}\par
}
{\xe \v fe_dnds_8\:functions.h}
{\xe \v functions.h\:fe_dnds_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dnds_8 (double  {\i rvalue}, double  {\i svalue}, double  {\i tvalue})}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dnds of isoparametric element calculated for particular r, s, and t \par
}{
Definition at line 44 of file fe_dn_iso_8.cpp.}\par
}
{\xe \v fe_dndt_8\:functions.h}
{\xe \v functions.h\:fe_dndt_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dndt_8 (double  {\i rvalue}, double  {\i svalue}, double  {\i tvalue})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dndt of isoparametric element calculated for particular r, s, and t \par
}{
Definition at line 82 of file fe_dn_iso_8.cpp.}\par
}
{\xe \v fe_dndx_8\:functions.h}
{\xe \v functions.h\:fe_dndx_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dndx_8 (int  {\i nnel}, VectorXd  {\i dndr}, VectorXd  {\i dnds}, VectorXd  {\i dndt}, MatrixXd  {\i invJacobian})}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dndx of actual element calculates using jacobian and shape function derivates calculated in the isoparametric element \par
}{
Definition at line 6 of file fe_dn_actual_8.cpp.}\par
}
{\xe \v fe_dndy_8\:functions.h}
{\xe \v functions.h\:fe_dndy_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dndy_8 (int  {\i nnel}, VectorXd  {\i dndr}, VectorXd  {\i dnds}, VectorXd  {\i dndt}, MatrixXd  {\i invJacobian})}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dndy of actual element calculates using jacobian and shape function derivates calculated in the isoparametric element \par
}{
Definition at line 17 of file fe_dn_actual_8.cpp.}\par
}
{\xe \v fe_dndz_8\:functions.h}
{\xe \v functions.h\:fe_dndz_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dndz_8 (int  {\i nnel}, VectorXd  {\i dndr}, VectorXd  {\i dnds}, VectorXd  {\i dndt}, MatrixXd  {\i invJacobian})}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dndz of actual element calculates using jacobian and shape function derivates calculated in the isoparametric element \par
}{
Definition at line 28 of file fe_dn_actual_8.cpp.}\par
}
{\xe \v fe_find\:functions.h}
{\xe \v functions.h\:fe_find}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int fe_find (VectorXd  {\i A}, double  {\i a})}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
find the poistion index of a value in a vector \'96 analogous to 'find' function in MATLAB \par
}{
Definition at line 4 of file fe_find.cpp.}\par
}
{\xe \v fe_find_index\:functions.h}
{\xe \v functions.h\:fe_find_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXi fe_find_index (VectorXi  {\i node_list})}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the index based on the DOF of a particular node \par
}{
Definition at line 16 of file fe_find_index.cpp.}\par
}
{\xe \v fe_gather\:functions.h}
{\xe \v functions.h\:fe_gather}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_gather (VectorXd  {\i global_vec}, VectorXd  {\i local_vec}, VectorXi  {\i node_list}, int  {\i sdof})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates element level vector (displacement, velocity, acceleration etc.) from a system level vector \par
}{
Definition at line 6 of file fe_gather.cpp.}\par
}
{\xe \v fe_get_mats\:functions.h}
{\xe \v functions.h\:fe_get_mats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_get_mats (int  {\i matl_code}, int  {\i obj_interest})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extracts the material parameter values based on the material id \par
}{
Definition at line 5 of file fe_get_mats.cpp.}\par
}
{\xe \v fe_get_model\:functions.h}
{\xe \v functions.h\:fe_get_model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string fe_get_model (int  {\i matl_code})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file fe_get_mats.cpp.}\par
}
{\xe \v fe_getforce\:functions.h}
{\xe \v functions.h\:fe_getforce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_getforce (MatrixXd  {\i nodes}, MatrixXd  {\i elements}, int  {\i ndof}, VectorXd  {\i u}, VectorXd  {\i v}, VectorXd  {\i fext}, int  {\i size_counter}, MatrixXd  {\i nodes_truss}, MatrixXd  {\i elements_truss})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the resultant nodal force after each time step. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the resultant force vector - Box 6.1 of Belytschko\par
This function represents the 'getforce' step in Belytschko (Box 6.1 - Explicit FEM Algorithm). For each hex element, this function calculates the internal nodal force vector and the resultant nodal force vector. Once, this is calculated for each element, the resultant vectors are scattered into global vectors. \par
}{
Definition at line 13 of file fe_getforce.cpp.}\par
}
{\xe \v fe_getTimeStep\:functions.h}
{\xe \v functions.h\:fe_getTimeStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_getTimeStep (MatrixXd  {\i nodes}, MatrixXd  {\i elements}, int  {\i ndof}, VectorXd  {\i u}, VectorXd  {\i v}, VectorXd  {\i fext})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Outputs the critical time step based on all the elements in a FE analysis\par
For all elements \'96 this function calculates the minimum critical timestep \par
}{
Definition at line 6 of file fe_getTimeStep.cpp.}\par
}
{\xe \v fe_isoElastic\:functions.h}
{\xe \v functions.h\:fe_isoElastic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_isoElastic (int  {\i n}, double  {\i E}, double  {\i nu})}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create material matrix for isotropic elastic case \par
}{
Definition at line 7 of file fe_isoElastic.cpp.}\par
}
{\xe \v fe_mainEXPLICIT\:functions.h}
{\xe \v functions.h\:fe_mainEXPLICIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_mainEXPLICIT ()}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function carries out the explicit dynamic analysis of the FEM problem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run the finite element analysis using an explicit dynamic method \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of elements\par
Writing the output to VTK files \par
}{
Definition at line 8 of file fe_mainEXPLICIT.cpp.}\par
}
{\xe \v fe_mainRead\:functions.h}
{\xe \v functions.h\:fe_mainRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_mainRead (std::string  {\i file})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the input text file \'96 for a particular job \par
}{
Definition at line 5 of file fe_mainRead.cpp.}\par
}
{\xe \v fe_mass_hex\:functions.h}
{\xe \v functions.h\:fe_mass_hex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_mass_hex (double  {\i rho}, int  {\i ndof}, int  {\i nnel}, int  {\i edof}, double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[])}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the mass matrix for a hex element \par
}{
Definition at line 7 of file fe_mass_hex.cpp.}\par
}
{\xe \v fe_mass_truss\:functions.h}
{\xe \v functions.h\:fe_mass_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_mass_truss (double  {\i rho}, double  {\i A_truss}, int  {\i edof}, MatrixXd  {\i nodes}, MatrixXd  {\i elements})}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the mass of a truss element \par
}{
Definition at line 81 of file fe_mass_hex.cpp.}\par
}
{\xe \v fe_scatter\:functions.h}
{\xe \v functions.h\:fe_scatter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_scatter (VectorXd  {\i global_vec}, VectorXd  {\i local_vec}, VectorXi  {\i node_list}, int  {\i sdof})}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates a system level vector based on the element level vector \par
}{
Definition at line 6 of file fe_scatter.cpp.}\par
}
{\xe \v fe_shapeMatrix\:functions.h}
{\xe \v functions.h\:fe_shapeMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_shapeMatrix (int  {\i edof}, int  {\i nnel}, VectorXd  {\i shapes})}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Outputs the shape function matrix for an element \par
}{
Definition at line 7 of file fe_shapeMatrix.cpp.}\par
}
{\xe \v fe_shapes_8\:functions.h}
{\xe \v functions.h\:fe_shapes_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_shapes_8 (double  {\i rvalue}, double  {\i svalue}, double  {\i tvalue})}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the shape functions for an 8 noded element \par
}{
Definition at line 7 of file fe_shapes.cpp.}\par
}
{\xe \v fe_stiffness_embed_truss\:functions.h}
{\xe \v functions.h\:fe_stiffness_embed_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_stiffness_embed_truss (MatrixXd  {\i nodes_truss}, MatrixXd  {\i elements_truss}, double  {\i E_truss}, double  {\i A_truss}, int  {\i ndof}, int  {\i nnel}, int  {\i edof}, double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[])}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal nodal force vector for a truss (1D) element \par
}{
Definition at line 6 of file fe_stiffness_embed_truss.cpp.}\par
}
{\xe \v fe_stiffness_hex\:functions.h}
{\xe \v functions.h\:fe_stiffness_hex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_stiffness_hex (double  {\i E}, double  {\i nu}, int  {\i ndof}, int  {\i nnel}, int  {\i edof}, double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[])}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal nodal force vector for a hexahedral element \par
}{
Definition at line 7 of file fe_stiffness_hex.cpp.}\par
}
{\xe \v fe_strDispMatrix\:functions.h}
{\xe \v functions.h\:fe_strDispMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_strDispMatrix (int  {\i edof}, int  {\i nnel}, VectorXd  {\i dndx}, VectorXd  {\i dndy}, VectorXd  {\i dndz})}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Strain displacement matrix B \par
}{
Definition at line 5 of file fe_strDispMatrix.cpp.}\par
}
{\xe \v fe_strDispMatrix_totalLagrangian\:functions.h}
{\xe \v functions.h\:fe_strDispMatrix_totalLagrangian}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_strDispMatrix_totalLagrangian (int  {\i edof}, int  {\i nnel}, VectorXd  {\i dndx}, VectorXd  {\i dndy}, VectorXd  {\i dndz}, VectorXd  {\i u})}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the strain displacement matrix in total lagrangian system \par
}{
Definition at line 31 of file fe_strDispMatrix.cpp.}\par
}
{\xe \v fe_stressUpdate\:functions.h}
{\xe \v functions.h\:fe_stressUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_stressUpdate (VectorXd  {\i dndx}, VectorXd  {\i dndy}, VectorXd  {\i dndz}, MatrixXd  {\i disp_mat}, VectorXd  {\i u}, int  {\i opt}, int  {\i return_opt})}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the stress at each time step based on the material model\par
This function calculates the updated stress for 3d elements - elastic, hyperelastic material models were implemented so far. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This block develops outputs the updated stress for a 3d elastic material\par
This block develops outputs the updated stress for a 3d incompressible mooney-rivlin hyperelastic material\par
outputs 2nd cauchy stress tensor in vector form\par
outputs cauchy stress tensor in vector form\par
This block develops outputs the updated stress for a 3d ogden hyperelastic material \par
}{
Definition at line 6 of file fe_stressUpdate.cpp.}\par
}
{\xe \v fe_stressUpdate_1d\:functions.h}
{\xe \v functions.h\:fe_stressUpdate_1d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_stressUpdate_1d (VectorXd  {\i dndx}, VectorXd  {\i dndy}, VectorXd  {\i dndz}, VectorXd  {\i u_e}, int  {\i opt}, MatrixXd  {\i nodes})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the stress at each time step based on the material model for a 1d element\par
This function calculates the updated stress for 1d elements - hyperelastic material model was implemented so far. \par
}{
Definition at line 6 of file fe_stressUpdate_1d.cpp.}\par
}
{\xe \v fe_tensor2voigt\:functions.h}
{\xe \v functions.h\:fe_tensor2voigt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_tensor2voigt (MatrixXd  {\i A})}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a symmetric tensor into a Voigt vector form\par
This function converts tensor into voigt's vector notation The tensor should be either 2X2 or 3X3. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tensor should be symmetric for its transformation into Voigt Vector \par
}{
Definition at line 8 of file fe_tensor2voigt.cpp.}\par
}
{\xe \v fe_transformMass\:functions.h}
{\xe \v functions.h\:fe_transformMass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_transformMass (MatrixXd  {\i m}, int  {\i opt})}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a normal mass matrix into a lumped mass matrix \par
}{
Definition at line 6 of file fe_transformMass.cpp.}\par
}
{\xe \v fe_updateNodes\:functions.h}
{\xe \v functions.h\:fe_updateNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_updateNodes (MatrixXd  {\i nodes}, VectorXd  {\i displacements})}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the nodal coordinates based on the displacements \par
}{
Definition at line 9 of file fe_update.cpp.}\par
}
{\xe \v fe_voigt2tensor\:functions.h}
{\xe \v functions.h\:fe_voigt2tensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_voigt2tensor (VectorXd  {\i B})}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a Voigt vector into a symmetric tensor form\par
This function converts vector in voigt's vector notation into a tensor The tensor will be either 2X2 or 3X3. \par
}{
Definition at line 8 of file fe_voigt2tensor.cpp.}\par
}
{\xe \v fe_vtkWrite_host\:functions.h}
{\xe \v functions.h\:fe_vtkWrite_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_vtkWrite_host (std::string  {\i output}, int  {\i format_choice}, int  {\i mesh_choice}, int  {\i time_step}, MatrixXd  {\i nodes}, MatrixXd  {\i elements})}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes VTK files for host mesh \par
}{
Definition at line 6 of file fe_vtk.cpp.}\par
}
{\xe \v fe_vtkWrite_truss\:functions.h}
{\xe \v functions.h\:fe_vtkWrite_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_vtkWrite_truss (std::string  {\i output}, int  {\i format_choice}, int  {\i mesh_choice}, int  {\i time_step}, MatrixXd  {\i nodes}, MatrixXd  {\i elements})}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes VTK files for truss mesh \par
}{
Definition at line 138 of file fe_vtk.cpp.}\par
}
{\xe \v fe_writeElementStress\:functions.h}
{\xe \v functions.h\:fe_writeElementStress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_writeElementStress (MatrixXd  {\i sigma_all}, double  {\i time})}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 12 of file fe_write.cpp.}\par
}
{\xe \v guass_points\:functions.h}
{\xe \v functions.h\:guass_points}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd guass_points (int  {\i n})}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a guass_point vector of n values \par
}{
Definition at line 5 of file fe_guass_points.cpp.}\par
}
{\xe \v guass_points_3d\:functions.h}
{\xe \v functions.h\:guass_points_3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd guass_points_3d (int  {\i nx}, int  {\i ny}, int  {\i nz})}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a guass point matrix in 3D \par
}{
Definition at line 4 of file fe_guass_points_3d.cpp.}\par
}
{\xe \v guass_weights\:functions.h}
{\xe \v functions.h\:guass_weights}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd guass_weights (int  {\i n})}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a guass_weight vector of n values \par
}{
Definition at line 5 of file fe_guass_weights.cpp.}\par
}
{\xe \v guass_weights_3d\:functions.h}
{\xe \v functions.h\:guass_weights_3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd guass_weights_3d (int  {\i ndof}, int  {\i nx}, int  {\i ny}, int  {\i nz})}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a guass weight matrix in 3D \par
}{
Definition at line 5 of file fe_guass_weights_3d.cpp.}\par
}
{\xe \v matrix2text\:functions.h}
{\xe \v functions.h\:matrix2text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void matrix2text (std::string  {\i name}, MatrixXd  {\i new_slave_master}, int  {\i width})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a matrix into a text file \par
}{
Definition at line 5 of file fe_matrix2text.cpp.}\par
}
{\xe \v text2matrix\:functions.h}
{\xe \v functions.h\:text2matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd text2matrix (std::string  {\i name}, int  {\i cols})}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads a text file into matrix \par
}{
Definition at line 10 of file fe_text2matrix.cpp.}\par
}
{\xe \v vector2text\:functions.h}
{\xe \v functions.h\:vector2text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void vector2text (std::string  {\i name}, VectorXd  {\i vector}, int  {\i width})}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a vector into a text file \par
}{
Definition at line 5 of file fe_vector2text.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v A_host\:functions.h}
{\xe \v functions.h\:A_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd A_host}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal velocities of the host mesh \par
}{
Definition at line 98 of file main.cpp.}\par
}
{\xe \v A_truss\:functions.h}
{\xe \v functions.h\:A_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd A_truss}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal velocities of the embedded mesh \par
}{
Definition at line 102 of file main.cpp.}\par
}
{\xe \v bcdof\:functions.h}
{\xe \v functions.h\:bcdof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXi bcdof}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DOF numbers for boundary conditions \par
}{
Definition at line 80 of file main.cpp.}\par
}
{\xe \v bcval\:functions.h}
{\xe \v functions.h\:bcval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd bcval}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displacement of the constrained DOF's \par
}{
Definition at line 82 of file main.cpp.}\par
}
{\xe \v dt_initial\:functions.h}
{\xe \v functions.h\:dt_initial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dt_initial}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file main.cpp.}\par
}
{\xe \v dt_min\:functions.h}
{\xe \v functions.h\:dt_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dt_min}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial time step \par
}{
Definition at line 62 of file main.cpp.}\par
}
{\xe \v element_strain_host\:functions.h}
{\xe \v functions.h\:element_strain_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd element_strain_host}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the stress tensor of an element \par
}{
Definition at line 86 of file main.cpp.}\par
}
{\xe \v element_strain_truss\:functions.h}
{\xe \v functions.h\:element_strain_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd element_strain_truss}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the stress of a truss element \par
}{
Definition at line 88 of file main.cpp.}\par
}
{\xe \v element_stress_host\:functions.h}
{\xe \v functions.h\:element_stress_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd element_stress_host}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file main.cpp.}\par
}
{\xe \v element_stress_truss\:functions.h}
{\xe \v functions.h\:element_stress_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd element_stress_truss}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the strain tensor of an element \par
}{
Definition at line 87 of file main.cpp.}\par
}
{\xe \v fcdof\:functions.h}
{\xe \v functions.h\:fcdof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXi fcdof}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Degrees of freedom \'96 corresponding to the applied load \par
}{
Definition at line 73 of file main.cpp.}\par
}
{\xe \v fcload\:functions.h}
{\xe \v functions.h\:fcload}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fcload}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file main.cpp.}\par
}
{\xe \v fi_curr\:functions.h}
{\xe \v functions.h\:fi_curr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fi_curr}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal nodal force vector at previous time step \par
}{
Definition at line 93 of file main.cpp.}\par
}
{\xe \v fi_prev\:functions.h}
{\xe \v functions.h\:fi_prev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fi_prev}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the strain of a truss element \par
}{
Definition at line 92 of file main.cpp.}\par
}
{\xe \v home_path\:functions.h}
{\xe \v functions.h\:home_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string home_path}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file main.cpp.}\par
}
{\xe \v input_load_amp\:functions.h}
{\xe \v functions.h\:input_load_amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double input_load_amp}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loading Amplitude \par
}{
Definition at line 71 of file main.cpp.}\par
}
{\xe \v job_file\:functions.h}
{\xe \v functions.h\:job_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string job_file}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Job folder name \par
}{
Definition at line 48 of file main.cpp.}\par
}
{\xe \v mat\:functions.h}
{\xe \v functions.h\:mat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Materials}* mat}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file main.cpp.}\par
}
{\xe \v material_types\:functions.h}
{\xe \v functions.h\:material_types}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int material_types}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reduces the timestep value by this amount Material Properties are stored in here \par
}{
Definition at line 66 of file main.cpp.}\par
}
{\xe \v mesh\:functions.h}
{\xe \v functions.h\:mesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Mesh}* mesh}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file main.cpp.}\par
}
{\xe \v ndof\:functions.h}
{\xe \v functions.h\:ndof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ndof}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Job input file name Dimension of the Simulation (3 for 3D, 2 for 2D and 1 for 1D) \par
}{
Definition at line 51 of file main.cpp.}\par
}
{\xe \v num_constraints\:functions.h}
{\xe \v functions.h\:num_constraints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int num_constraints}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of boundary conditions = nodes x dof \par
}{
Definition at line 78 of file main.cpp.}\par
}
{\xe \v num_meshes\:functions.h}
{\xe \v functions.h\:num_meshes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int num_meshes}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input meshes - number of meshes and type of meshes \par
}{
Definition at line 54 of file main.cpp.}\par
}
{\xe \v output_frequency\:functions.h}
{\xe \v functions.h\:output_frequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int output_frequency}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
End Time \par
}{
Definition at line 60 of file main.cpp.}\par
}
{\xe \v reduction\:functions.h}
{\xe \v functions.h\:reduction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double reduction}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum time step \par
}{
Definition at line 63 of file main.cpp.}\par
}
{\xe \v t_end\:functions.h}
{\xe \v functions.h\:t_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double t_end}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start Time \par
}{
Definition at line 59 of file main.cpp.}\par
}
{\xe \v t_start\:functions.h}
{\xe \v functions.h\:t_start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double t_start}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file main.cpp.}\par
}
{\xe \v U_host\:functions.h}
{\xe \v functions.h\:U_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd U_host}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal energy at different time steps \par
}{
Definition at line 96 of file main.cpp.}\par
}
{\xe \v U_truss\:functions.h}
{\xe \v functions.h\:U_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd U_truss}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal accelerations of the host mesh \par
}{
Definition at line 100 of file main.cpp.}\par
}
{\xe \v V_host\:functions.h}
{\xe \v functions.h\:V_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd V_host}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal displacements of the host mesh \par
}{
Definition at line 97 of file main.cpp.}\par
}
{\xe \v V_truss\:functions.h}
{\xe \v functions.h\:V_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd V_truss}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal displacements of the embedded mesh \par
}{
Definition at line 101 of file main.cpp.}\par
}
{\xe \v W_int\:functions.h}
{\xe \v functions.h\:W_int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd W_int}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal nodal force vector at current time step \par
}{
Definition at line 94 of file main.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/Materials.h File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/Materials.h}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/Materials.h}
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <cmath>}\par
{\f2 #include <vector>}\par
{\f2 #include <fstream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <string>}\par
{\f2 #include "Eigen/Dense"}\par
{\f2 #include "Eigen/Eigenvalues"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Materials}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/Mesh.h File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/Mesh.h}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/headers/Mesh.h}
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <cmath>}\par
{\f2 #include <vector>}\par
{\f2 #include <fstream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <string>}\par
{\f2 #include "Eigen/Dense"}\par
{\f2 #include "Eigen/Eigenvalues"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Mesh}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/main.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/main.cpp}
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include <cmath>}\par
{\f2 #include <vector>}\par
{\f2 #include <fstream>}\par
{\f2 #include <Eigen/Dense>}\par
{\f2 #include "functions.h"}\par
{\f2 #include "Mesh.h"}\par
{\f2 #include "Materials.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b home_path}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b job_file}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ndof}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_meshes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Mesh} * {\b mesh}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b t_start}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b t_end}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b output_frequency}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dt_initial}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dt_min}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b reduction}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b material_types}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Materials} * {\b mat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b input_load_amp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXi {\b fcdof}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fcload}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_constraints}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXi {\b bcdof}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b bcval}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b element_stress_host}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b element_strain_host}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b element_stress_truss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b element_strain_truss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fi_prev}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fi_curr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b W_int}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b U_host}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b V_host}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b A_host}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b U_truss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b V_truss}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b A_truss}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal accelerations of the embedded mesh This is the main file. If you want to submit a new job \'96 this is where you do it \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enter the path address for your job folder\par
What is the Problem Dimension - Degrees of Freedom per node?\par
Simulation start time\par
Simulation end time\par
Output frequency \'96 result ouputs for every 100 timesteps\par
Maximum time step\par
Reduction factor\par
Loading Amplitude\par
number of nodes * number of directions\par
Degrees of freedom index data\par
Number of bounday condition constraints\par
Which nodes are constrained ?\par
index corresponding to the constrained degrees of freedom\par
Displacements of the constrained degrees of freedom\par
Enter your choice for type of simulations below, based on the following options: 1 - Explicit Dynamic 2 - Implicit Dynamic 3 - Static\par
}{
Definition at line 108 of file main.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v A_host\:main.cpp}
{\xe \v main.cpp\:A_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd A_host}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal velocities of the host mesh \par
}{
Definition at line 98 of file main.cpp.}\par
}
{\xe \v A_truss\:main.cpp}
{\xe \v main.cpp\:A_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd A_truss}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal velocities of the embedded mesh \par
}{
Definition at line 102 of file main.cpp.}\par
}
{\xe \v bcdof\:main.cpp}
{\xe \v main.cpp\:bcdof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXi bcdof}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DOF numbers for boundary conditions \par
}{
Definition at line 80 of file main.cpp.}\par
}
{\xe \v bcval\:main.cpp}
{\xe \v main.cpp\:bcval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd bcval}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Displacement of the constrained DOF's \par
}{
Definition at line 82 of file main.cpp.}\par
}
{\xe \v dt_initial\:main.cpp}
{\xe \v main.cpp\:dt_initial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dt_initial}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file main.cpp.}\par
}
{\xe \v dt_min\:main.cpp}
{\xe \v main.cpp\:dt_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dt_min}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initial time step \par
}{
Definition at line 62 of file main.cpp.}\par
}
{\xe \v element_strain_host\:main.cpp}
{\xe \v main.cpp\:element_strain_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd element_strain_host}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the stress tensor of an element \par
}{
Definition at line 86 of file main.cpp.}\par
}
{\xe \v element_strain_truss\:main.cpp}
{\xe \v main.cpp\:element_strain_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd element_strain_truss}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the stress of a truss element \par
}{
Definition at line 88 of file main.cpp.}\par
}
{\xe \v element_stress_host\:main.cpp}
{\xe \v main.cpp\:element_stress_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd element_stress_host}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file main.cpp.}\par
}
{\xe \v element_stress_truss\:main.cpp}
{\xe \v main.cpp\:element_stress_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd element_stress_truss}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the strain tensor of an element \par
}{
Definition at line 87 of file main.cpp.}\par
}
{\xe \v fcdof\:main.cpp}
{\xe \v main.cpp\:fcdof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXi fcdof}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Degrees of freedom \'96 corresponding to the applied load \par
}{
Definition at line 73 of file main.cpp.}\par
}
{\xe \v fcload\:main.cpp}
{\xe \v main.cpp\:fcload}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fcload}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file main.cpp.}\par
}
{\xe \v fi_curr\:main.cpp}
{\xe \v main.cpp\:fi_curr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fi_curr}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal nodal force vector at previous time step \par
}{
Definition at line 93 of file main.cpp.}\par
}
{\xe \v fi_prev\:main.cpp}
{\xe \v main.cpp\:fi_prev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fi_prev}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores the strain of a truss element \par
}{
Definition at line 92 of file main.cpp.}\par
}
{\xe \v home_path\:main.cpp}
{\xe \v main.cpp\:home_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string home_path}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file main.cpp.}\par
}
{\xe \v input_load_amp\:main.cpp}
{\xe \v main.cpp\:input_load_amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double input_load_amp}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loading Amplitude \par
}{
Definition at line 71 of file main.cpp.}\par
}
{\xe \v job_file\:main.cpp}
{\xe \v main.cpp\:job_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string job_file}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Job folder name \par
}{
Definition at line 48 of file main.cpp.}\par
}
{\xe \v mat\:main.cpp}
{\xe \v main.cpp\:mat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Materials}* mat}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file main.cpp.}\par
}
{\xe \v material_types\:main.cpp}
{\xe \v main.cpp\:material_types}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int material_types}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reduces the timestep value by this amount Material Properties are stored in here \par
}{
Definition at line 66 of file main.cpp.}\par
}
{\xe \v mesh\:main.cpp}
{\xe \v main.cpp\:mesh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Mesh}* mesh}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file main.cpp.}\par
}
{\xe \v ndof\:main.cpp}
{\xe \v main.cpp\:ndof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ndof}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Job input file name Dimension of the Simulation (3 for 3D, 2 for 2D and 1 for 1D) \par
}{
Definition at line 51 of file main.cpp.}\par
}
{\xe \v num_constraints\:main.cpp}
{\xe \v main.cpp\:num_constraints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int num_constraints}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of boundary conditions = nodes x dof \par
}{
Definition at line 78 of file main.cpp.}\par
}
{\xe \v num_meshes\:main.cpp}
{\xe \v main.cpp\:num_meshes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int num_meshes}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Input meshes - number of meshes and type of meshes \par
}{
Definition at line 54 of file main.cpp.}\par
}
{\xe \v output_frequency\:main.cpp}
{\xe \v main.cpp\:output_frequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int output_frequency}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
End Time \par
}{
Definition at line 60 of file main.cpp.}\par
}
{\xe \v reduction\:main.cpp}
{\xe \v main.cpp\:reduction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double reduction}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum time step \par
}{
Definition at line 63 of file main.cpp.}\par
}
{\xe \v t_end\:main.cpp}
{\xe \v main.cpp\:t_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double t_end}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start Time \par
}{
Definition at line 59 of file main.cpp.}\par
}
{\xe \v t_start\:main.cpp}
{\xe \v main.cpp\:t_start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double t_start}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file main.cpp.}\par
}
{\xe \v U_host\:main.cpp}
{\xe \v main.cpp\:U_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd U_host}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal energy at different time steps \par
}{
Definition at line 96 of file main.cpp.}\par
}
{\xe \v U_truss\:main.cpp}
{\xe \v main.cpp\:U_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd U_truss}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal accelerations of the host mesh \par
}{
Definition at line 100 of file main.cpp.}\par
}
{\xe \v V_host\:main.cpp}
{\xe \v main.cpp\:V_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd V_host}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal displacements of the host mesh \par
}{
Definition at line 97 of file main.cpp.}\par
}
{\xe \v V_truss\:main.cpp}
{\xe \v main.cpp\:V_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd V_truss}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Variable storing the nodal displacements of the embedded mesh \par
}{
Definition at line 101 of file main.cpp.}\par
}
{\xe \v W_int\:main.cpp}
{\xe \v main.cpp\:W_int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd W_int}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal nodal force vector at current time step \par
}{
Definition at line 94 of file main.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_assemble_mass.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_assemble_mass.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_assemble_mass.cpp}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_assemble_mass} (MatrixXd mm, MatrixXd m, VectorXi node_list, int sdof)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_assemble_mass\:fe_assemble_mass.cpp}
{\xe \v fe_assemble_mass.cpp\:fe_assemble_mass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_assemble_mass (MatrixXd  {\i mm}, MatrixXd  {\i m}, VectorXi  {\i node_list}, int  {\i sdof})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assembles the global mass matrix \par
}{
Definition at line 24 of file fe_assemble_mass.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_find_index.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_find_index.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_find_index.cpp}
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXi {\b fe_find_index} (VectorXi node_list)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_find_index\:fe_find_index.cpp}
{\xe \v fe_find_index.cpp\:fe_find_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXi fe_find_index (VectorXi  {\i node_list})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the index based on the DOF of a particular node \par
}{
Definition at line 16 of file fe_find_index.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_gather.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_gather.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_gather.cpp}
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_gather} (VectorXd global_vec, VectorXd local_vec, VectorXi node_list, int sdof)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_gather\:fe_gather.cpp}
{\xe \v fe_gather.cpp\:fe_gather}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_gather (VectorXd  {\i global_vec}, VectorXd  {\i local_vec}, VectorXi  {\i node_list}, int  {\i sdof})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates element level vector (displacement, velocity, acceleration etc.) from a system level vector \par
}{
Definition at line 6 of file fe_gather.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_scatter.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_scatter.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Global-Local/fe_scatter.cpp}
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_scatter} (VectorXd global_vec, VectorXd local_vec, VectorXi node_list, int sdof)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_scatter\:fe_scatter.cpp}
{\xe \v fe_scatter.cpp\:fe_scatter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_scatter (VectorXd  {\i global_vec}, VectorXd  {\i local_vec}, VectorXi  {\i node_list}, int  {\i sdof})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates a system level vector based on the element level vector \par
}{
Definition at line 6 of file fe_scatter.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/InternalNodalForce/fe_stiffness_embed_truss.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/InternalNodalForce/fe_stiffness_embed_truss.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/InternalNodalForce/fe_stiffness_embed_truss.cpp}
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_stiffness_embed_truss} (MatrixXd nodes_truss, MatrixXd elements_truss, double E_truss, double {\b A_truss}, int {\b ndof}, int nnel, int edof, double xcoord[], double ycoord[], double zcoord[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_stiffness_embed_truss\:fe_stiffness_embed_truss.cpp}
{\xe \v fe_stiffness_embed_truss.cpp\:fe_stiffness_embed_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_stiffness_embed_truss (MatrixXd  {\i nodes_truss}, MatrixXd  {\i elements_truss}, double  {\i E_truss}, double  {\i A_truss}, int  {\i ndof}, int  {\i nnel}, int  {\i edof}, double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[])}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal nodal force vector for a truss (1D) element \par
}{
Definition at line 6 of file fe_stiffness_embed_truss.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/InternalNodalForce/fe_stiffness_hex.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/InternalNodalForce/fe_stiffness_hex.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/InternalNodalForce/fe_stiffness_hex.cpp}
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_stiffness_hex} (double E, double nu, int {\b ndof}, int nnel, int edof, double xcoord[], double ycoord[], double zcoord[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_stiffness_hex\:fe_stiffness_hex.cpp}
{\xe \v fe_stiffness_hex.cpp\:fe_stiffness_hex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_stiffness_hex (double  {\i E}, double  {\i nu}, int  {\i ndof}, int  {\i nnel}, int  {\i edof}, double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[])}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Internal nodal force vector for a hexahedral element \par
}{
Definition at line 7 of file fe_stiffness_hex.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Mass/fe_mass_hex.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Mass/fe_mass_hex.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Mass/fe_mass_hex.cpp}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_mass_hex} (double rho, int {\b ndof}, int nnel, int edof, double xcoord[], double ycoord[], double zcoord[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_mass_truss} (double rho, double {\b A_truss}, int edof, MatrixXd nodes, MatrixXd elements)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_mass_hex\:fe_mass_hex.cpp}
{\xe \v fe_mass_hex.cpp\:fe_mass_hex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_mass_hex (double  {\i rho}, int  {\i ndof}, int  {\i nnel}, int  {\i edof}, double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[])}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the mass matrix for a hex element \par
}{
Definition at line 7 of file fe_mass_hex.cpp.}\par
}
{\xe \v fe_mass_truss\:fe_mass_hex.cpp}
{\xe \v fe_mass_hex.cpp\:fe_mass_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_mass_truss (double  {\i rho}, double  {\i A_truss}, int  {\i edof}, MatrixXd  {\i nodes}, MatrixXd  {\i elements})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the mass of a truss element \par
}{
Definition at line 81 of file fe_mass_hex.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_points.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_points.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_points.cpp}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b guass_points} (int n)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v guass_points\:fe_guass_points.cpp}
{\xe \v fe_guass_points.cpp\:guass_points}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd guass_points (int  {\i n})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a guass_point vector of n values \par
}{
Definition at line 5 of file fe_guass_points.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_points_3d.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_points_3d.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_points_3d.cpp}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b guass_points_3d} (int nx, int ny, int nz)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v guass_points_3d\:fe_guass_points_3d.cpp}
{\xe \v fe_guass_points_3d.cpp\:guass_points_3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd guass_points_3d (int  {\i nx}, int  {\i ny}, int  {\i nz})}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a guass point matrix in 3D \par
}{
Definition at line 4 of file fe_guass_points_3d.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_weights.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_weights.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_weights.cpp}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b guass_weights} (int n)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v guass_weights\:fe_guass_weights.cpp}
{\xe \v fe_guass_weights.cpp\:guass_weights}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd guass_weights (int  {\i n})}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a guass_weight vector of n values \par
}{
Definition at line 5 of file fe_guass_weights.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_weights_3d.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_weights_3d.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/Quadrature/fe_guass_weights_3d.cpp}
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b guass_weights_3d} (int {\b ndof}, int nx, int ny, int nz)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v guass_weights_3d\:fe_guass_weights_3d.cpp}
{\xe \v fe_guass_weights_3d.cpp\:guass_weights_3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd guass_weights_3d (int  {\i ndof}, int  {\i nx}, int  {\i ny}, int  {\i nz})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a guass weight matrix in 3D \par
}{
Definition at line 5 of file fe_guass_weights_3d.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_dn_actual_8.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_dn_actual_8.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_dn_actual_8.cpp}
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dndx_8} (int nnel, VectorXd dndr, VectorXd dnds, VectorXd dndt, MatrixXd invJacobian)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dndy_8} (int nnel, VectorXd dndr, VectorXd dnds, VectorXd dndt, MatrixXd invJacobian)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dndz_8} (int nnel, VectorXd dndr, VectorXd dnds, VectorXd dndt, MatrixXd invJacobian)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_dndx_8\:fe_dn_actual_8.cpp}
{\xe \v fe_dn_actual_8.cpp\:fe_dndx_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dndx_8 (int  {\i nnel}, VectorXd  {\i dndr}, VectorXd  {\i dnds}, VectorXd  {\i dndt}, MatrixXd  {\i invJacobian})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dndx of actual element calculates using jacobian and shape function derivates calculated in the isoparametric element \par
}{
Definition at line 6 of file fe_dn_actual_8.cpp.}\par
}
{\xe \v fe_dndy_8\:fe_dn_actual_8.cpp}
{\xe \v fe_dn_actual_8.cpp\:fe_dndy_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dndy_8 (int  {\i nnel}, VectorXd  {\i dndr}, VectorXd  {\i dnds}, VectorXd  {\i dndt}, MatrixXd  {\i invJacobian})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dndy of actual element calculates using jacobian and shape function derivates calculated in the isoparametric element \par
}{
Definition at line 17 of file fe_dn_actual_8.cpp.}\par
}
{\xe \v fe_dndz_8\:fe_dn_actual_8.cpp}
{\xe \v fe_dn_actual_8.cpp\:fe_dndz_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dndz_8 (int  {\i nnel}, VectorXd  {\i dndr}, VectorXd  {\i dnds}, VectorXd  {\i dndt}, MatrixXd  {\i invJacobian})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dndz of actual element calculates using jacobian and shape function derivates calculated in the isoparametric element \par
}{
Definition at line 28 of file fe_dn_actual_8.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_dn_iso_8.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_dn_iso_8.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_dn_iso_8.cpp}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dndr_8} (double rvalue, double svalue, double tvalue)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dnds_8} (double rvalue, double svalue, double tvalue)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_dndt_8} (double rvalue, double svalue, double tvalue)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_dndr_8\:fe_dn_iso_8.cpp}
{\xe \v fe_dn_iso_8.cpp\:fe_dndr_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dndr_8 (double  {\i rvalue}, double  {\i svalue}, double  {\i tvalue})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dndr of isoparametric element calculated for particular r, s, and t \par
}{
Definition at line 6 of file fe_dn_iso_8.cpp.}\par
}
{\xe \v fe_dnds_8\:fe_dn_iso_8.cpp}
{\xe \v fe_dn_iso_8.cpp\:fe_dnds_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dnds_8 (double  {\i rvalue}, double  {\i svalue}, double  {\i tvalue})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dnds of isoparametric element calculated for particular r, s, and t \par
}{
Definition at line 44 of file fe_dn_iso_8.cpp.}\par
}
{\xe \v fe_dndt_8\:fe_dn_iso_8.cpp}
{\xe \v fe_dn_iso_8.cpp\:fe_dndt_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_dndt_8 (double  {\i rvalue}, double  {\i svalue}, double  {\i tvalue})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
dndt of isoparametric element calculated for particular r, s, and t \par
}{
Definition at line 82 of file fe_dn_iso_8.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_shapeMatrix.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_shapeMatrix.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_shapeMatrix.cpp}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_shapeMatrix} (int edof, int nnel, VectorXd shapes)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_shapeMatrix\:fe_shapeMatrix.cpp}
{\xe \v fe_shapeMatrix.cpp\:fe_shapeMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_shapeMatrix (int  {\i edof}, int  {\i nnel}, VectorXd  {\i shapes})}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Outputs the shape function matrix for an element \par
}{
Definition at line 7 of file fe_shapeMatrix.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_shapes.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_shapes.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Elements/ShapeFunctions/fe_shapes.cpp}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_shapes_8} (double rvalue, double svalue, double tvalue)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_shapes_8\:fe_shapes.cpp}
{\xe \v fe_shapes.cpp\:fe_shapes_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_shapes_8 (double  {\i rvalue}, double  {\i svalue}, double  {\i tvalue})}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates the shape functions for an 8 noded element \par
}{
Definition at line 7 of file fe_shapes.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/BoundaryConditions/fe_apply_bc.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/BoundaryConditions/fe_apply_bc.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/BoundaryConditions/fe_apply_bc.cpp}
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_apply_bc_displacement} (VectorXd U, VectorXi {\b bcdof}, VectorXd {\b bcval})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_apply_bc_force} (VectorXd ff, VectorXi {\b bcdof}, VectorXd {\b bcval})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_apply_bc_stiffness} (MatrixXd kk, VectorXi {\b bcdof}, VectorXd {\b bcval})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_apply_bc_displacement\:fe_apply_bc.cpp}
{\xe \v fe_apply_bc.cpp\:fe_apply_bc_displacement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_apply_bc_displacement (VectorXd  {\i U}, VectorXi  {\i bcdof}, VectorXd  {\i bcval})}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 5 of file fe_apply_bc.cpp.}\par
}
{\xe \v fe_apply_bc_force\:fe_apply_bc.cpp}
{\xe \v fe_apply_bc.cpp\:fe_apply_bc_force}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_apply_bc_force (VectorXd  {\i ff}, VectorXi  {\i bcdof}, VectorXd  {\i bcval})}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 17 of file fe_apply_bc.cpp.}\par
}
{\xe \v fe_apply_bc_stiffness\:fe_apply_bc.cpp}
{\xe \v fe_apply_bc.cpp\:fe_apply_bc_stiffness}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_apply_bc_stiffness (MatrixXd  {\i kk}, VectorXi  {\i bcdof}, VectorXd  {\i bcval})}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file fe_apply_bc.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calDefGrad.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calDefGrad.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calDefGrad.cpp}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_calDefGrad} (VectorXd dndx, VectorXd dndy, VectorXd dndz, VectorXd u)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_calDefGrad\:fe_calDefGrad.cpp}
{\xe \v fe_calDefGrad.cpp\:fe_calDefGrad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_calDefGrad (VectorXd  {\i dndx}, VectorXd  {\i dndy}, VectorXd  {\i dndz}, VectorXd  {\i u})}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the deformation gradient \par
}{
Definition at line 7 of file fe_calDefGrad.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calJacobian.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calJacobian.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calJacobian.cpp}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_calJacobian} (int dim, int nnel, VectorXd dndr, VectorXd dnds, VectorXd dndt, double xcoord[], double ycoord[], double zcoord[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_calJacobian\:fe_calJacobian.cpp}
{\xe \v fe_calJacobian.cpp\:fe_calJacobian}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_calJacobian (int  {\i dim}, int  {\i nnel}, VectorXd  {\i dndr}, VectorXd  {\i dnds}, VectorXd  {\i dndt}, double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[])}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the jacobian \'96 using the derivates of shape functions \par
}{
Definition at line 7 of file fe_calJacobian.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calSimpTransformation.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calSimpTransformation.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calSimpTransformation.cpp}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_calSimpTransformation} (MatrixXd truss_nodes)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_calSimpTransformation\:fe_calSimpTransformation.cpp}
{\xe \v fe_calSimpTransformation.cpp\:fe_calSimpTransformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_calSimpTransformation (MatrixXd  {\i truss_nodes})}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 7 of file fe_calSimpTransformation.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calTransformation.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calTransformation.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_calTransformation.cpp}
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_calTransformation} (MatrixXd truss_nodes, int choice)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_calTransformation\:fe_calTransformation.cpp}
{\xe \v fe_calTransformation.cpp\:fe_calTransformation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_calTransformation (MatrixXd  {\i truss_nodes}, int  {\i choice})}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the transformation matrix - transformation from local (truss) coordinate system to global (3d hex) coordinate system \par
}{
Definition at line 7 of file fe_calTransformation.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_strDispMatrix.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_strDispMatrix.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_strDispMatrix.cpp}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_strDispMatrix} (int edof, int nnel, VectorXd dndx, VectorXd dndy, VectorXd dndz)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_strDispMatrix_totalLagrangian} (int edof, int nnel, VectorXd dndx, VectorXd dndy, VectorXd dndz, VectorXd u)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_strDispMatrix\:fe_strDispMatrix.cpp}
{\xe \v fe_strDispMatrix.cpp\:fe_strDispMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_strDispMatrix (int  {\i edof}, int  {\i nnel}, VectorXd  {\i dndx}, VectorXd  {\i dndy}, VectorXd  {\i dndz})}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Strain displacement matrix B \par
}{
Definition at line 5 of file fe_strDispMatrix.cpp.}\par
}
{\xe \v fe_strDispMatrix_totalLagrangian\:fe_strDispMatrix.cpp}
{\xe \v fe_strDispMatrix.cpp\:fe_strDispMatrix_totalLagrangian}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_strDispMatrix_totalLagrangian (int  {\i edof}, int  {\i nnel}, VectorXd  {\i dndx}, VectorXd  {\i dndy}, VectorXd  {\i dndz}, VectorXd  {\i u})}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the strain displacement matrix in total lagrangian system \par
}{
Definition at line 31 of file fe_strDispMatrix.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_tensor2voigt.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_tensor2voigt.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_tensor2voigt.cpp}
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_tensor2voigt} (MatrixXd A)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_tensor2voigt\:fe_tensor2voigt.cpp}
{\xe \v fe_tensor2voigt.cpp\:fe_tensor2voigt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_tensor2voigt (MatrixXd  {\i A})}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function converts tensor into voigt's vector notation The tensor should be either 2X2 or 3X3. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tensor should be symmetric for its transformation into Voigt Vector \par
}{
Definition at line 8 of file fe_tensor2voigt.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_transformMass.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_transformMass.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_transformMass.cpp}
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_transformMass} (MatrixXd m, int opt)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_transformMass\:fe_transformMass.cpp}
{\xe \v fe_transformMass.cpp\:fe_transformMass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_transformMass (MatrixXd  {\i m}, int  {\i opt})}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts a normal mass matrix into a lumped mass matrix \par
}{
Definition at line 6 of file fe_transformMass.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_voigt2tensor.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_voigt2tensor.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/ElementCalculations/fe_voigt2tensor.cpp}
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_voigt2tensor} (VectorXd B)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_voigt2tensor\:fe_voigt2tensor.cpp}
{\xe \v fe_voigt2tensor.cpp\:fe_voigt2tensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_voigt2tensor (VectorXd  {\i B})}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function converts vector in voigt's vector notation into a tensor The tensor will be either 2X2 or 3X3. \par
}{
Definition at line 8 of file fe_voigt2tensor.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/Explicit/fe_mainEXPLICIT.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/Explicit/fe_mainEXPLICIT.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/Explicit/fe_mainEXPLICIT.cpp}
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_mainEXPLICIT} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function carries out the explicit dynamic analysis of the FEM problem. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_mainEXPLICIT\:fe_mainEXPLICIT.cpp}
{\xe \v fe_mainEXPLICIT.cpp\:fe_mainEXPLICIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_mainEXPLICIT ()}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function carries out the explicit dynamic analysis of the FEM problem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run the finite element analysis using an explicit dynamic method \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of elements\par
Writing the output to VTK files \par
}{
Definition at line 8 of file fe_mainEXPLICIT.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/RHSNodalForce/fe_getforce.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/RHSNodalForce/fe_getforce.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/RHSNodalForce/fe_getforce.cpp}
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_getforce} (MatrixXd nodes, MatrixXd elements, int {\b ndof}, VectorXd u, VectorXd v, VectorXd fext, int size_counter, MatrixXd nodes_truss, MatrixXd elements_truss)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the resultant nodal force after each time step. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_getforce\:fe_getforce.cpp}
{\xe \v fe_getforce.cpp\:fe_getforce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_getforce (MatrixXd  {\i nodes}, MatrixXd  {\i elements}, int  {\i ndof}, VectorXd  {\i u}, VectorXd  {\i v}, VectorXd  {\i fext}, int  {\i size_counter}, MatrixXd  {\i nodes_truss}, MatrixXd  {\i elements_truss})}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the resultant nodal force after each time step. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function represents the 'getforce' step in Belytschko (Box 6.1 - Explicit FEM Algorithm). For each hex element, this function calculates the internal nodal force vector and the resultant nodal force vector. Once, this is calculated for each element, the resultant vectors are scattered into global vectors. \par
}{
Definition at line 13 of file fe_getforce.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/RHSNodalForce/fe_update.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/RHSNodalForce/fe_update.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/FEM/RHSNodalForce/fe_update.cpp}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_updateNodes} (MatrixXd nodes, VectorXd displacements)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_updateNodes\:fe_update.cpp}
{\xe \v fe_update.cpp\:fe_updateNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_updateNodes (MatrixXd  {\i nodes}, VectorXd  {\i displacements})}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the nodal coordinates based on the displacements \par
}{
Definition at line 9 of file fe_update.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/fe_mainRead.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/fe_mainRead.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/fe_mainRead.cpp}
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iomanip>}\par
{\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_mainRead} (std::string file)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_mainRead\:fe_mainRead.cpp}
{\xe \v fe_mainRead.cpp\:fe_mainRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_mainRead (std::string  {\i file})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the input text file \'96 for a particular job \par
}{
Definition at line 5 of file fe_mainRead.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/fe_text2matrix.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/fe_text2matrix.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/fe_text2matrix.cpp}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iomanip>}\par
{\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b text2matrix} (std::string name, int cols)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v text2matrix\:fe_text2matrix.cpp}
{\xe \v fe_text2matrix.cpp\:text2matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd text2matrix (std::string  {\i name}, int  {\i cols})}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads a text file into matrix \par
}{
Definition at line 10 of file fe_text2matrix.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/Materials.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/Materials.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/Materials.cpp}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
{\f2 #include "Materials.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/Mesh.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/Mesh.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Input/Mesh.cpp}
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
{\f2 #include "Mesh.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_display.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_display.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_display.cpp}
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_display_matrix} (MatrixXd A)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_display_matrix} (MatrixXi A)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_display_vector} (VectorXd A)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_display_vector} (VectorXi A)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_display_matrix\:fe_display.cpp}
{\xe \v fe_display.cpp\:fe_display_matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_display_matrix (MatrixXd  {\i A})}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints out a matrix \par
}{
Definition at line 5 of file fe_display.cpp.}\par
}
{\xe \v fe_display_matrix\:fe_display.cpp}
{\xe \v fe_display.cpp\:fe_display_matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_display_matrix (MatrixXi  {\i A})}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file fe_display.cpp.}\par
}
{\xe \v fe_display_vector\:fe_display.cpp}
{\xe \v fe_display.cpp\:fe_display_vector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_display_vector (VectorXd  {\i A})}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints out a vector \par
}{
Definition at line 41 of file fe_display.cpp.}\par
}
{\xe \v fe_display_vector\:fe_display.cpp}
{\xe \v fe_display.cpp\:fe_display_vector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_display_vector (VectorXi  {\i A})}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file fe_display.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_matrix2text.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_matrix2text.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_matrix2text.cpp}
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iomanip>}\par
{\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b matrix2text} (std::string name, MatrixXd new_slave_master, int width)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v matrix2text\:fe_matrix2text.cpp}
{\xe \v fe_matrix2text.cpp\:matrix2text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void matrix2text (std::string  {\i name}, MatrixXd  {\i new_slave_master}, int  {\i width})}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a matrix into a text file \par
}{
Definition at line 5 of file fe_matrix2text.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_vector2text.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_vector2text.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_vector2text.cpp}
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iomanip>}\par
{\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b vector2text} (std::string name, VectorXd vector, int width)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v vector2text\:fe_vector2text.cpp}
{\xe \v fe_vector2text.cpp\:vector2text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void vector2text (std::string  {\i name}, VectorXd  {\i vector}, int  {\i width})}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a vector into a text file \par
}{
Definition at line 5 of file fe_vector2text.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_vtk.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_vtk.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_vtk.cpp}
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_vtkWrite_host} (std::string output, int format_choice, int mesh_choice, int time_step, MatrixXd nodes, MatrixXd elements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_vtkWrite_truss} (std::string output, int format_choice, int mesh_choice, int time_step, MatrixXd nodes, MatrixXd elements)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_vtkWrite_host\:fe_vtk.cpp}
{\xe \v fe_vtk.cpp\:fe_vtkWrite_host}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_vtkWrite_host (std::string  {\i output}, int  {\i format_choice}, int  {\i mesh_choice}, int  {\i time_step}, MatrixXd  {\i nodes}, MatrixXd  {\i elements})}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes VTK files for host mesh \par
}{
Definition at line 6 of file fe_vtk.cpp.}\par
}
{\xe \v fe_vtkWrite_truss\:fe_vtk.cpp}
{\xe \v fe_vtk.cpp\:fe_vtkWrite_truss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_vtkWrite_truss (std::string  {\i output}, int  {\i format_choice}, int  {\i mesh_choice}, int  {\i time_step}, MatrixXd  {\i nodes}, MatrixXd  {\i elements})}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes VTK files for truss mesh \par
}{
Definition at line 138 of file fe_vtk.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_write.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_write.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Input-Output/Ouput/fe_write.cpp}
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fe_writeElementStress} (MatrixXd sigma_all, double time)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_writeElementStress\:fe_write.cpp}
{\xe \v fe_write.cpp\:fe_writeElementStress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fe_writeElementStress (MatrixXd  {\i sigma_all}, double  {\i time})}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 12 of file fe_write.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/Elastic/fe_isoElastic.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/Elastic/fe_isoElastic.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/Elastic/fe_isoElastic.cpp}
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_isoElastic} (int n, double E, double nu)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_isoElastic\:fe_isoElastic.cpp}
{\xe \v fe_isoElastic.cpp\:fe_isoElastic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_isoElastic (int  {\i n}, double  {\i E}, double  {\i nu})}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create material matrix for isotropic elastic case \par
}{
Definition at line 7 of file fe_isoElastic.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/fe_get_mats.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/fe_get_mats.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/fe_get_mats.cpp}
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_get_mats} (int matl_code, int obj_interest)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b fe_get_model} (int matl_code)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_get_mats\:fe_get_mats.cpp}
{\xe \v fe_get_mats.cpp\:fe_get_mats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_get_mats (int  {\i matl_code}, int  {\i obj_interest})}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Extracts the material parameter values based on the material id \par
}{
Definition at line 5 of file fe_get_mats.cpp.}\par
}
{\xe \v fe_get_model\:fe_get_mats.cpp}
{\xe \v fe_get_mats.cpp\:fe_get_model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string fe_get_model (int  {\i matl_code})}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file fe_get_mats.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/StressUpdate/fe_stressUpdate.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/StressUpdate/fe_stressUpdate.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/StressUpdate/fe_stressUpdate.cpp}
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_stressUpdate} (VectorXd dndx, VectorXd dndy, VectorXd dndz, MatrixXd disp_mat, VectorXd u, int opt, int return_opt)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_stressUpdate\:fe_stressUpdate.cpp}
{\xe \v fe_stressUpdate.cpp\:fe_stressUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_stressUpdate (VectorXd  {\i dndx}, VectorXd  {\i dndy}, VectorXd  {\i dndz}, MatrixXd  {\i disp_mat}, VectorXd  {\i u}, int  {\i opt}, int  {\i return_opt})}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calculates the updated stress for 3d elements - elastic, hyperelastic material models were implemented so far. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This block develops outputs the updated stress for a 3d elastic material\par
This block develops outputs the updated stress for a 3d incompressible mooney-rivlin hyperelastic material\par
outputs 2nd cauchy stress tensor in vector form\par
outputs cauchy stress tensor in vector form\par
This block develops outputs the updated stress for a 3d ogden hyperelastic material \par
}{
Definition at line 6 of file fe_stressUpdate.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/StressUpdate/fe_stressUpdate_1d.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/StressUpdate/fe_stressUpdate_1d.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Materials/StressUpdate/fe_stressUpdate_1d.cpp}
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
VectorXd {\b fe_stressUpdate_1d} (VectorXd dndx, VectorXd dndy, VectorXd dndz, VectorXd u_e, int opt, MatrixXd nodes)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_stressUpdate_1d\:fe_stressUpdate_1d.cpp}
{\xe \v fe_stressUpdate_1d.cpp\:fe_stressUpdate_1d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VectorXd fe_stressUpdate_1d (VectorXd  {\i dndx}, VectorXd  {\i dndy}, VectorXd  {\i dndz}, VectorXd  {\i u_e}, int  {\i opt}, MatrixXd  {\i nodes})}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calculates the updated stress for 1d elements - hyperelastic material model was implemented so far. \par
}{
Definition at line 6 of file fe_stressUpdate_1d.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_calArea_4.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_calArea_4.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_calArea_4.cpp}
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_calArea_4} (double a1, double a2, double a3, double a4, double b1, double b2, double b3, double b4, double c1, double c2, double c3, double c4)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_calArea_4\:fe_calArea_4.cpp}
{\xe \v fe_calArea_4.cpp\:fe_calArea_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_calArea_4 (double  {\i a1}, double  {\i a2}, double  {\i a3}, double  {\i a4}, double  {\i b1}, double  {\i b2}, double  {\i b3}, double  {\i b4}, double  {\i c1}, double  {\i c2}, double  {\i c3}, double  {\i c4})}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the area of a face with 4 vertices \par
}{
Definition at line 5 of file fe_calArea_4.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_calVolume.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_calVolume.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_calVolume.cpp}
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_calVolume} (double xcoord[], double ycoord[], double zcoord[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_calVolume\:fe_calVolume.cpp}
{\xe \v fe_calVolume.cpp\:fe_calVolume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_calVolume (double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[])}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the volume of a 3d element \par
}{
Definition at line 7 of file fe_calVolume.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_concatenate_vector2matrix.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_concatenate_vector2matrix.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_concatenate_vector2matrix.cpp}
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MatrixXd {\b fe_concatenate_vector2matrix} (MatrixXd A, VectorXd B, int opt)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_concatenate_vector2matrix\:fe_concatenate_vector2matrix.cpp}
{\xe \v fe_concatenate_vector2matrix.cpp\:fe_concatenate_vector2matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MatrixXd fe_concatenate_vector2matrix (MatrixXd  {\i A}, VectorXd  {\i B}, int  {\i opt})}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Concatenate a vector to a matrix \'96 rowwise or coloumn wise \par
}{
Definition at line 5 of file fe_concatenate_vector2matrix.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_detMatrix.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_detMatrix.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_detMatrix.cpp}
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef vector< double > {\b Vec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef vector< {\b Vec} > {\b Mat}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_detMatrix} ({\b Mat} matrix)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b d} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v Mat\:fe_detMatrix.cpp}
{\xe \v fe_detMatrix.cpp\:Mat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef vector<{\b Vec}> {\b Mat}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 8 of file fe_detMatrix.cpp.}\par
}
{\xe \v Vec\:fe_detMatrix.cpp}
{\xe \v fe_detMatrix.cpp\:Vec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef vector<double> {\b Vec}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 7 of file fe_detMatrix.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_detMatrix\:fe_detMatrix.cpp}
{\xe \v fe_detMatrix.cpp\:fe_detMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_detMatrix ({\b Mat}  {\i matrix})}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 12 of file fe_detMatrix.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v d\:fe_detMatrix.cpp}
{\xe \v fe_detMatrix.cpp\:d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double d = 0}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 10 of file fe_detMatrix.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_find.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_find.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_find.cpp}
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fe_find} (VectorXd A, double a)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_find\:fe_find.cpp}
{\xe \v fe_find.cpp\:fe_find}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int fe_find (VectorXd  {\i A}, double  {\i a})}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
find the poistion index of a value in a vector \'96 analogous to 'find' function in MATLAB \par
}{
Definition at line 4 of file fe_find.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_invMatrix.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_invMatrix.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/Math/GeneralMath/fe_invMatrix.cpp}
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef vector< double > {\b Vec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef vector< {\b Vec} > {\b Mat}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Mat} {\b fe_invMatrix} ({\b Mat} matrix)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v Mat\:fe_invMatrix.cpp}
{\xe \v fe_invMatrix.cpp\:Mat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef vector<{\b Vec}> {\b Mat}}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 8 of file fe_invMatrix.cpp.}\par
}
{\xe \v Vec\:fe_invMatrix.cpp}
{\xe \v fe_invMatrix.cpp\:Vec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef vector<double> {\b Vec}}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 7 of file fe_invMatrix.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_invMatrix\:fe_invMatrix.cpp}
{\xe \v fe_invMatrix.cpp\:fe_invMatrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Mat} fe_invMatrix ({\b Mat}  {\i matrix})}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 10 of file fe_invMatrix.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/fe_calTimeStep.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/fe_calTimeStep.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/fe_calTimeStep.cpp}
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_calTimeStep} (double xcoord[], double ycoord[], double zcoord[], double E, double nu, double rho)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_calTimeStep\:fe_calTimeStep.cpp}
{\xe \v fe_calTimeStep.cpp\:fe_calTimeStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_calTimeStep (double  {\i xcoord}[], double  {\i ycoord}[], double  {\i zcoord}[], double  {\i E}, double  {\i nu}, double  {\i rho})}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For a single element - this function calculates the volume of the element and calculates the critical time step based on the wave speed. \par
}{
Definition at line 5 of file fe_calTimeStep.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/fe_calWaveSpeed.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/fe_calWaveSpeed.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/fe_calWaveSpeed.cpp}
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_calWaveSpeed} (double E, double nu, double rho)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_calWaveSpeed\:fe_calWaveSpeed.cpp}
{\xe \v fe_calWaveSpeed.cpp\:fe_calWaveSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_calWaveSpeed (double  {\i E}, double  {\i nu}, double  {\i rho})}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This function calculates the wave speed for an element based on its material properties \par
}{
Definition at line 6 of file fe_calWaveSpeed.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/fe_getTimeStep.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/fe_getTimeStep.cpp}
{\xe \v /Users/vsg111/Dropbox/Work/Papers/Paper_EEM_Computational/EEM_Dynamic/source/TimeStep/fe_getTimeStep.cpp}
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fe_getTimeStep} (MatrixXd nodes, MatrixXd elements, int {\b ndof}, VectorXd u, VectorXd v, VectorXd fext)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v fe_getTimeStep\:fe_getTimeStep.cpp}
{\xe \v fe_getTimeStep.cpp\:fe_getTimeStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fe_getTimeStep (MatrixXd  {\i nodes}, MatrixXd  {\i elements}, int  {\i ndof}, VectorXd  {\i u}, VectorXd  {\i v}, VectorXd  {\i fext})}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For all elements \'96 this function calculates the minimum critical timestep \par
}{
Definition at line 6 of file fe_getTimeStep.cpp.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}